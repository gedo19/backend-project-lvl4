// @ts-checkconst BaseModel = require('./BaseModel.cjs');module.exports = class Task extends BaseModel {  static get tableName() {    return 'tasks';  }  static get jsonSchema() {    return {      type: 'object',      required: ['name', 'statusId', 'creatorId'],      properties: {        id: { type: 'integer' },        name: { type: 'string', minLength: 1 },        description: { type: 'string' },        statusId: { type: 'integer', minimum: 1 },        creatorId: { type: 'integer', minimum: 1 },        executorId: { type: ['integer', 'null'] },      },    };  }  static get relationMappings() {    return {      status: {        relation: BaseModel.BelongsToOneRelation,        modelClass: 'TaskStatus.cjs',        join: {          from: 'tasks.status_id',          to: 'statuses.id',        },      },      creator: {        relation: BaseModel.BelongsToOneRelation,        modelClass: 'User.cjs',        join: {          from: 'tasks.creator_id',          to: 'users.id',        },      },      executor: {        relation: BaseModel.BelongsToOneRelation,        modelClass: 'User.cjs',        join: {          from: 'tasks.executor_id',          to: 'users.id',        },      },      labels: {        relation: BaseModel.ManyToManyRelation,        modelClass: 'TaskLabel.cjs',        join: {          from: 'tasks.id',          through: {            from: 'task_labels.taskId',            to: 'task_labels.labelId',          },          to: 'labels.id',        },      },    };  }  static get modifiers() {    return {      filterExecutor(query, executorId) {        if (executorId) {          query.where({ executorId });        }      },      filterStatus(query, statusId) {        if (statusId) {          query.where({ statusId });        }      },      filterLabel(query, labelId) {        if (labelId) {          query.where({ labelId  })        }      },      filterByOwner(query, creatorId) {        if (creatorId) {          query.where({ creatorId })        }      },    };  }}